- replies = replies.ascend_by_name
- replies = replies.not_cancelled if !params[:show_cancelled]
- total_number_of_guests = replies.not_cancelled.count
- replies = replies.all(:include => [:food_preferences, :ticket_type])
- if logged_in?
  %p
    - if params[:show_cancelled]
      = link_to t('.show_active'), url_for
    - else
      = link_to t('.show_cancelled'), url_for(:show_cancelled => true)

%table.vertical_header
  %tr
    %th= t('.total_number_of_guests')
    %td= total_number_of_guests

- width = logged_in? ? 100 : 300

%table#guest_list_table
  %tr
    %th{:style =>"width: #{width}px; max-width: #{width}px; min-width: #{width}px"}= t('replies.form.name')
    - if logged_in?
      %th{:style =>"width: 200px; max-width: 200px; min-width: 200px"}= t('replies.form.email')
      %th{:style =>"width: 50px; max-width: 50px; min-width: 50px"}= t('replies.form.ticket_type')
      - if @event.use_food_preferences?
        %th{:style =>"width: 100px; max-width: 100px; min-width: 100px"}= Reply.human_attribute_name("food_preferences")
        %th{:style =>"width: 100px; max-width: 100px; min-width: 100px"}= t('replies.form.food')
      %th{:style =>"width: #{width}px; max-width: #{width}px; min-width: #{width}px"}= t('replies.form.comments')

    - @event.custom_fields.each do |field|
      %th= field.name
    - if logged_in?    
      %th{:style =>"width: 100px; max-width: 100px; min-width: 100px"} &nbsp;
      %th &nbsp;
    
  - replies.each do |reply|
    %tr{:class => "#{cycle('even', 'odd')}"}
      %td{:style => "width: #{width}px; max-width: #{width}px; min-width: #{width}px"}= reply.name 
      - if logged_in?
        %td{:style => "width: 200px; max-width: 200px; min-width: 200px"}= reply.email 
        %td{:style => "width: 50px; max-width: 50px; min-width: 50px"}= reply.ticket_type.name 
        - if @event.use_food_preferences?
          %td{:style => "width: 100px; max-width: 100px; min-width: 100px"}= food_preferences(reply)
          %td{:style => "width: 100px; max-width: 100px; min-width: 100px"}= reply.food 
        %td{:style => "width: #{width}px; max-width: #{width}px; min-width: #{width}px"}= reply.comments 
      - @event.custom_fields.each do |field|
        - value = reply.custom_field_values.detect { |v| v.custom_field == field }
        %td= value.try(:value)
      - if logged_in?
        %td{:style => "width: 100px; max-width: 100px; min-width: 100px"}
          - unless reply.attending?
            =# link_to "Attending", set_attending_event_replies_path(@event, :name => reply.name), :method => :post
          - unless reply.cancelled?
            = link_to t('remove'), reply_path(reply), :method => :delete, :confirm => t(".remove_confirmation", :name => reply.name)
          = link_to t('edit'), edit_reply_path(reply)

- if logged_in?
  - if @event.use_food_preferences?
    %table#food_preferences_summary.vertical_header
      %tr
        %th= t('.number_of') 
        %td &nbsp;
      - FoodPreference.all.each do |food_preference|
        %tr
          %th= food_preference.name
          %td= replies.to_a.select { |r| r.food_preferences.include?(food_preference) }.size
  


